@page "/login"
@using Microsoft.AspNetCore.Components
@using BlazorChatApp.BLL.Contracts.DTOs
@using BlazorChatApp.BLL.Infrastructure.Interfaces
@inject NavigationManager NavManager
@inject LoginDto LoginDto
@inject IToastService ToastService
<link href="_content/Blazored.Toast/blazored-toast.css" rel="stylesheet"/>
<link href="https://stackpath.bootstrap.com/font-awasome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
<h1>Enter to chat</h1>
<EditForm Model="LoginDto" OnSubmit="LoginAsync">
    <div class="container">
        <div class="message">
            <label for="login">Enter your username</label>
            <InputText id="login" class="message" @bind-Value="LoginDto.UserName"/>
        </div><br/>
        <div class="message">
            <label for="password">Enter your password</label>
            <InputText id="password" class="message" @bind-Value="LoginDto.Password" type="password"/>
        </div>
        <br/>
        <button class="btn btn-primary" type="submit">Login</button>
    </div> 
</EditForm>
<br/><br/>
 <div style="position:center">
@if (!isLoaded)
{
    <div class="loader"></div>
    <p>Loading...</p>}
</div>

@code
{
    private bool isLoaded = true;
    [Inject] private IAuthService _service { get; set; }

    private async void LoginAsync()
    {
        isLoaded = false;
        try
        {
            var isLoggedIn = await _service.LoginAsync(LoginDto.UserName, LoginDto.Password);
            if (isLoggedIn == "Ok")
            {
                ToastService.ShowSuccess("You are successfully logged in!");
                NavManager.NavigateTo("/");
            }
            else
            {
                ToastService.ShowError("Incorrect login or password!");
            }
            isLoaded = true;
            StateHasChanged();
        }
        catch 
        {
            isLoaded = true;
            NavManager.NavigateTo("/login");
        }
    }
}