@page "/createPrivate"
@using BlazorChatApp.BLL.Infrastructure.Interfaces
@using BlazorChatApp.BLL.Responses
@using Microsoft.AspNetCore.Identity
@using System.Net
@inject NavigationManager NavManager
@inject IRequestService RequestService
@inherits BaseComponent


<h1>There you can start messaging in private chat with defined user!</h1>

<div class="container">
    <div class="align-content-xl-center">
        <form>
        @foreach (var user in users)
        {  
            <input type="hidden" id="userId" @bind-value="@user.Id"/>
            <button type="submit" class="room-button" @onclick="() => CreatePrivateChat(user.Id)">@user.UserName</button>
        }
        </form>
    </div>
</div>

@code
{
    List<IdentityUser> users = new List<IdentityUser>();
    string notification = "";

    protected override async Task OnParametersSetAsync()
    {

        GetAllUsersResponse getAllUsersResponse = await RequestService.GetAllUsersAsync();

        if (getAllUsersResponse.StatusCode == HttpStatusCode.Unauthorized || getAllUsersResponse.StatusCode == HttpStatusCode.Forbidden)
        {
            NavManager.NavigateTo("/login");
        }
        else
        {
            users = await getAllUsersResponse.Users;
        }
    }

    protected async void CreatePrivateChat(string userId)
    {
        CreateChatResponse isAllowedAccessToCreateChat =  await RequestService.CreatePrivateRoomAsync(userId);

 
        if (isAllowedAccessToCreateChat.StatusCode == HttpStatusCode.Unauthorized 
            || isAllowedAccessToCreateChat.StatusCode == HttpStatusCode.Forbidden)
        {
            NavManager.NavigateTo("/login");
        }
        else
        {
            notification = "Chat was created successfully!";
            NavManager.NavigateTo("/myChats");
        }
    }
}