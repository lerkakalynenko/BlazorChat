@page "/base"
@using BlazorChatApp.BLL.Responses
@using System.Net
@using BlazorChatApp.BLL.Helpers
@using BlazorChatApp.DAL.Domain.Entities
@using Blazored.LocalStorage
@inject NavigationManager NavManager
@inject ILocalStorageService LocalStorage
@code
{
    protected void CheckIfUserHasAccess(BaseResponse response, Action action)
    {
        if (response.StatusCode == HttpStatusCode.Unauthorized 
            || response.StatusCode == HttpStatusCode.Forbidden)
        {
            TokenHolder.Token = null;
            LocalStorage.ClearAsync();
            NavManager.NavigateTo("/login");
        }
        else
        {
            action.Invoke();
        }
    }
    protected void CheckIfUserHasAccess(BaseResponse response, Action action, List<Message>? chatMessages)
    {
        if (response.StatusCode == HttpStatusCode.Unauthorized 
            || response.StatusCode == HttpStatusCode.Forbidden)
        {
            TokenHolder.Token = null;
            LocalStorage.ClearAsync();
            NavManager.NavigateTo("/login");
        }
        else
        {
            action.Invoke();
        }
    }
}