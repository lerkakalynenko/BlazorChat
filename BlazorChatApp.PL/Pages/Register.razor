@page "/register"
@using Microsoft.AspNetCore.Components
@using BlazorChatApp.BLL.Contracts.DTOs
@using BlazorChatApp.PL.Controllers
@using Microsoft.AspNetCore.Mvc
@inject BlazorChatApp.BLL.Infrastructure.Interfaces.IAuthorizationService Service
@inject NavigationManager NavManager
@inject RegisterDto RegisterDto
@inject AccountController Controller

<h1>Registration</h1>
<EditForm Model="RegisterDto" OnSubmit="RegisterAsync">
    <div class="container">
        <div class="message">
            <label for="login">Enter your username</label>
            <InputText id="login" class="message" @bind-Value="RegisterDto.UserName"/>
        </div><br/>
        <div class="message">
            <label for="password">Enter your password</label>
            <InputText  id="password" class="message" @bind-Value="RegisterDto.Password" type="password"/>
        </div><br/>
        <div class="message">
            <label for="confirmPassword">Enter your password again</label>
            <InputText  id="confirmePassword" class="message" @bind-Value="RegisterDto.ConfirmPassword" type="password"/>
        </div><br/>
        <button class="btn btn-primary" type="submit">Register</button>
    </div> 
</EditForm>


@code
{
    public string? ConfirmedPassword { get; set; }


    private async Task RegisterAsync()
    { 

        if (ConfirmedPassword != RegisterDto.Password)
        {
            NavManager.NavigateTo("/register");

        }
        try
        {
            if (RegisterDto.UserName != null && RegisterDto.Password != null)
            {
                var response = await Controller.RegisterAsync(RegisterDto.UserName,RegisterDto.Password);
                if (response.GetType() == typeof(OkObjectResult))
                {
                    NavManager.NavigateTo("/login");
                }
            }
        }
        catch
        {
            NavManager.NavigateTo("/register");
        }
     
    }

    
}