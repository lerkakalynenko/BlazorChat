@using Blazored.LocalStorage
@using System.Security.Claims
@using BlazorChatApp.BLL.Helpers
@inject NavigationManager NavManager
@inject ILocalStorageService StorageService
@inject ILocalStorageService localStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Chat application</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if (status)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="myChats">
                    <span class="oi oi-home" aria-hidden="true"></span> My chats
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="chats">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Chats
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="createRoom">
                    <span class="oi oi-plus" aria-hidden="true"></span> Add public chat
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="createPrivate">
                    <span class="oi oi-plus" aria-hidden="true"></span> Add private chat
                </NavLink>
            </div>
        }

    </nav>
</div>

@code {
    private bool status = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var userIsAuthed = await localStorage.GetItemAsync<string>("token");

        if (userIsAuthed == null)
        {
            status = false;
            StateHasChanged();
        }
        else
        {
            status = true;
            StateHasChanged();
        }
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}